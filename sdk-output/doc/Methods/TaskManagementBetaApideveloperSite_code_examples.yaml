- path: /task-status/pending-tasks
  method: HEAD
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        import { Configuration, TaskManagementBetaApi } from "sailpoint-api-client";
        const apiConfig = new Configuration();
        const taskManagementBetaApi = new TaskManagementBetaApi(apiConfig);

        const offset = 0; // number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const limit = 250; // number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const count = true; // boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.

        try {
          const val = await taskManagementBetaApi.getPendingTaskHeaders();
          
          // Below is a request that includes all optional parameters 
          // const val = await taskManagementBetaApi.getPendingTaskHeaders(offset, limit, count);
          
          console.log('API called successfully.');
        } catch (error) {
          console.error('Error occurred while calling API: ', error);
        }
- path: /task-status/pending-tasks
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        import { Configuration, TaskManagementBetaApi } from "sailpoint-api-client";
        const apiConfig = new Configuration();
        const taskManagementBetaApi = new TaskManagementBetaApi(apiConfig);

        const offset = 0; // number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const limit = 250; // number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const count = true; // boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.

        try {
          const val = await taskManagementBetaApi.getPendingTasks();
          
          // Below is a request that includes all optional parameters 
          // const val = await taskManagementBetaApi.getPendingTasks(offset, limit, count);
          console.log('API called successfully. Returned data: ' + val.data);
          
        } catch (error) {
          console.error('Error occurred while calling API: ', error);
        }
- path: /task-status/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        import { Configuration, TaskManagementBetaApi } from "sailpoint-api-client";
        const apiConfig = new Configuration();
        const taskManagementBetaApi = new TaskManagementBetaApi(apiConfig);

        const id : string = "00eebcf881994e419d72e757fd30dc0e"; // Task ID.

        try {
          const val = await taskManagementBetaApi.getTaskStatus(id);
          
          // Below is a request that includes all optional parameters 
          // const val = await taskManagementBetaApi.getTaskStatus(id);
          console.log('API called successfully. Returned data: ' + val.data);
          
        } catch (error) {
          console.error('Error occurred while calling API: ', error);
        }
- path: /task-status
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        import { Configuration, TaskManagementBetaApi } from "sailpoint-api-client";
        const apiConfig = new Configuration();
        const taskManagementBetaApi = new TaskManagementBetaApi(apiConfig);

        const limit = 250; // number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const offset = 0; // number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const count = true; // boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        const filters = "completionStatus eq "Success""; // string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **sourceId**: *eq, in*  **completionStatus**: *eq, in*  **type**: *eq, in*
        const sorters = "-created"; // string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **created**

        try {
          const val = await taskManagementBetaApi.getTaskStatusList();
          
          // Below is a request that includes all optional parameters 
          // const val = await taskManagementBetaApi.getTaskStatusList(limit, offset, count, filters, sorters);
          console.log('API called successfully. Returned data: ' + val.data);
          
        } catch (error) {
          console.error('Error occurred while calling API: ', error);
        }
- path: /task-status/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        import { Configuration, TaskManagementBetaApi, JsonPatchOperationBeta } from "sailpoint-api-client";
        const apiConfig = new Configuration();
        const taskManagementBetaApi = new TaskManagementBetaApi(apiConfig);

        const id : string = "00eebcf881994e419d72e757fd30dc0e"; // Task ID.
        const jsonPatchOperationBeta : Array<JsonPatchOperationBeta> = ; // The JSONPatch payload used to update the object.

        try {
          const val = await taskManagementBetaApi.updateTaskStatus(id, jsonPatchOperationBeta);
          
          // Below is a request that includes all optional parameters 
          // const val = await taskManagementBetaApi.updateTaskStatus(id, jsonPatchOperationBeta);
          console.log('API called successfully. Returned data: ' + val.data);
          
        } catch (error) {
          console.error('Error occurred while calling API: ', error);
        }
