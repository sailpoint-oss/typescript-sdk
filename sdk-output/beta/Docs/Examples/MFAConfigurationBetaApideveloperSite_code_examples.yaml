- path: /mfa/{method}/delete
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $method =  # string | The name of the MFA method. The currently supported method names are \'okta-verify\' and \'duo-web\'. (default to undefined)
        
        # Delete MFA method configuration
        
        try {
            -Betamethod $method 
            
            # Below is a request that includes all optional parameters
            #  -Betamethod $method  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/duo-web/config
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # Configuration of Duo MFA method
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/kba/config
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $allLanguages =  # boolean | Indicator whether the question text should be returned in all configured languages    * If true, the question text is returned in all languages that it is configured in.    * If false, the question text is returned in the user locale if available, else for the default locale.     * If not passed, it behaves the same way as passing this parameter as false (optional) (default to undefined)
        
        # Configuration of KBA MFA method
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -BetaallLanguages $allLanguages  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/okta-verify/config
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # Configuration of Okta MFA method
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/duo-web/config
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $mfaDuoConfigBeta = @"
        {mfaMethod=duo-web, enabled=true, host=www.example.com, accessKey=qw123Y3QlA5UqocYpdU3rEkzrK2D497y, identityAttribute=email, configProperties={skey=12q3WERlcUHWJmiMqyCXI3uOF7EaDJTbdeOp6E2B, ikey=Q123WE45R6TY7890ZXCV}}
        "@
        
        # Set Duo MFA configuration
        
        try {
            $Result = ConvertFrom-JsonTomfaDuoConfigBeta -Json $mfaDuoConfigBeta
            -BetamfaDuoConfigBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetamfaDuoConfigBeta $mfaDuoConfigBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/kba/config/answers
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        # Array<KbaAnswerRequestItemBeta> | 
        $kbaAnswerRequestItemBeta = @"[{id=173423, answer=822cd15d6c15aa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a0859a2fea34}, {id=c54fee53-2d63-4fc5-9259-3e93b9994135, answer=9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08}]"@ 
        
        
        # Set MFA KBA configuration
        
        try {
            $Result = ConvertFrom-JsonTokbaAnswerRequestItemBeta -Json $kbaAnswerRequestItemBeta
            -BetakbaAnswerRequestItemBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetakbaAnswerRequestItemBeta $kbaAnswerRequestItemBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/okta-verify/config
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $mfaOktaConfigBeta = @"
        {mfaMethod=okta-verify, enabled=true, host=www.example.com, accessKey=dk778Y3QlA5UqocYpdU3rEkzrK2D497y, identityAttribute=email}
        "@
        
        # Set Okta MFA configuration
        
        try {
            $Result = ConvertFrom-JsonTomfaOktaConfigBeta -Json $mfaOktaConfigBeta
            -BetamfaOktaConfigBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetamfaOktaConfigBeta $mfaOktaConfigBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /mfa/{method}/test
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $method =  # string | The name of the MFA method. The currently supported method names are \'okta-verify\' and \'duo-web\'. (default to undefined)
        
        # MFA method\'s test configuration
        
        try {
            -Betamethod $method 
            
            # Below is a request that includes all optional parameters
            #  -Betamethod $method  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
