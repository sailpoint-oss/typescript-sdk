- path: /sod-policies
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $sodPolicyBeta = @"
        {name=Conflicting-Policy-Name, description=This policy ensures compliance of xyz, ownerRef={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=Owner Name}, externalPolicyReference=XYZ policy, compensatingControls=Have a manager review the transaction decisions for their "out of compliance" employee, correctionAdvice=Based on the role of the employee, managers should remove access that is not required for their job function., state=ENFORCED, tags=[string], creatorId=0f11f2a4-7c94-4bf3-a2bd-742580fe3bde, modifierId=0f11f2a4-7c94-4bf3-a2bd-742580fe3bde, violationOwnerAssignmentConfig={assignmentRule=MANAGER, ownerRef={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=Violation Owner Name}}, scheduled=true, type=CONFLICTING_ACCESS_BASED, conflictingAccessCriteria={leftCriteria={name=money-in, criteriaList=[{type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a66}, {type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a67}]}, rightCriteria={name=money-out, criteriaList=[{type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a68}, {type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a69}]}}}
        "@
        
        # Create SOD policy
        
        try {
            $Result = ConvertFrom-JsonTosodPolicyBeta -Json $sodPolicyBeta
            -BetasodPolicyBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetasodPolicyBeta $sodPolicyBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the SOD Policy to delete. (default to undefined)
        $logical =  # boolean | Indicates whether this is a soft delete (logical true) or a hard delete. (optional) (default to true)
        
        # Delete SOD policy by ID
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -Betalogical $logical  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the SOD policy the schedule must be deleted for. (default to undefined)
        
        # Delete SOD policy schedule
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/{reportResultId}/download/{fileName}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $reportResultId =  # string | The ID of the report reference to download. (default to undefined)
        $fileName =  # string | Custom Name for the  file. (default to undefined)
        
        # Download custom violation report
        
        try {
            -BetareportResultId $reportResultId -BetafileName $fileName 
            
            # Below is a request that includes all optional parameters
            #  -BetareportResultId $reportResultId -BetafileName $fileName  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/{reportResultId}/download
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $reportResultId =  # string | The ID of the report reference to download. (default to undefined)
        
        # Download violation report
        
        try {
            -BetareportResultId $reportResultId 
            
            # Below is a request that includes all optional parameters
            #  -BetareportResultId $reportResultId  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # Get multi-report run task status
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the object reference to retrieve. (default to undefined)
        
        # Get SOD policy by ID
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the object reference to retrieve. (default to undefined)
        
        # Get SOD policy schedule
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/sod-violation-report-status/{reportResultId}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $reportResultId =  # string | The ID of the report reference to retrieve. (default to undefined)
        
        # Get violation report run status
        
        try {
            -BetareportResultId $reportResultId 
            
            # Below is a request that includes all optional parameters
            #  -BetareportResultId $reportResultId  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/violation-report
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the object reference to retrieve. (default to undefined)
        
        # Get SOD violation report status
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, in*  **state**: *eq, in* (optional) (default to undefined)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, created, modified, description** (optional) (default to undefined)
        
        # List SOD policies
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -Betalimit $limit -Betaoffset $offset -Betacount $count -Betafilters $filters -Betasorters $sorters  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the SOD policy being modified. (default to undefined)
        $requestBody =  # Array<object> | A list of SOD Policy update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * ownerRef * externalPolicyReference * compensatingControls * correctionAdvice * state * tags * violationOwnerAssignmentConfig * scheduled * conflictingAccessCriteria 
        $requestBody = @"[{op=replace, path=/description, value=Modified description}, {op=replace, path=/conflictingAccessCriteria/leftCriteria/name, value=money-in-modified}, {op=replace, path=/conflictingAccessCriteria/rightCriteria, value={name=money-out-modified, criteriaList=[{type=ENTITLEMENT, id=2c918087682f9a86016839c0509c1ab2}]}}]"@ 
        
        
        # Patch a SOD policy
        
        try {
            $Result = ConvertFrom-JsonTorequestBody -Json $requestBody
            -Betaid $id -BetarequestBody $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetarequestBody $requestBody  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/schedule
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the SOD policy to update its schedule. (default to undefined)
        $sodPolicyScheduleBeta = @"
        
        "@
        
        # Update SOD Policy schedule
        
        try {
            $Result = ConvertFrom-JsonTosodPolicyScheduleBeta -Json $sodPolicyScheduleBeta
            -Betaid $id -BetasodPolicyScheduleBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetasodPolicyScheduleBeta $sodPolicyScheduleBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of the SOD policy to update. (default to undefined)
        $sodPolicyBeta = @"
        {id=0f11f2a4-7c94-4bf3-a2bd-742580fe3bde, name=Conflicting-Policy-Name, created=2020-01-01T00:00:00.000000Z, modified=2020-01-01T00:00:00.000000Z, description=Modified Description, ownerRef={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=Owner Name}, externalPolicyReference=XYZ policy, compensatingControls=Have a manager review the transaction decisions for their "out of compliance" employee, correctionAdvice=Based on the role of the employee, managers should remove access that is not required for their job function., state=ENFORCED, tags=[string], creatorId=0f11f2a4-7c94-4bf3-a2bd-742580fe3bde, modifierId=0f11f2a4-7c94-4bf3-a2bd-742580fe3bde, violationOwnerAssignmentConfig={assignmentRule=MANAGER, ownerRef={type=IDENTITY, id=2c91808568c529c60168cca6f90c1313, name=Violation Owner Name}}, scheduled=true, type=CONFLICTING_ACCESS_BASED, conflictingAccessCriteria={leftCriteria={name=money-in, criteriaList=[{type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a66}, {type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a67}]}, rightCriteria={name=money-out, criteriaList=[{type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a68}, {type=ENTITLEMENT, id=2c9180866166b5b0016167c32ef31a69}]}}}
        "@
        
        # Update SOD policy by ID
        
        try {
            $Result = ConvertFrom-JsonTosodPolicyBeta -Json $sodPolicyBeta
            -Betaid $id -BetasodPolicyBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetasodPolicyBeta $sodPolicyBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-violation-report/run
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $multiPolicyRequestBeta = @"
        {filteredPolicyList=[b868cd40-ffa4-4337-9c07-1a51846cfa94, 63a07a7b-39a4-48aa-956d-50c827deba2a]}
        "@
        
        # Runs all policies for org
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -BetamultiPolicyRequestBeta $multiPolicyRequestBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /sod-policies/{id}/violation-report/run
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The SOD policy ID to run. (default to undefined)
        
        # Runs SOD policy violation report
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
