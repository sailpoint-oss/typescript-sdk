- path: /password-policies
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $passwordPolicyV3DtoBeta = @"
        {description=New Password Policy with high requirements to password complexity., id=null, name=High security Password Policy, dateCreated=1639056206564, lastUpdated=1662385430753, firstExpirationReminder=90, accountIdMinWordLength=3, accountNameMinWordLength=3, maxLength=0, maxRepeatedChars=4, minAlpha=1, minCharacterTypes=-1, minLength=8, minLower=0, minNumeric=1, minSpecial=0, minUpper=0, passwordExpiration=90, defaultPolicy=false, enablePasswdExpiration=false, requireStrongAuthn=false, requireStrongAuthOffNetwork=false, requireStrongAuthUntrustedGeographies=false, useAccountAttributes=false, useDictionary=false, useIdentityAttributes=false, validateAgainstAccountId=true, validateAgainstAccountName=true, sourceIds=[2c91808382ffee0b01830de154f14034, 2c91808582ffee0c01830de36511405f]}
        "@
        
        # Create Password Policy
        
        try {
            $Result = ConvertFrom-JsonTopasswordPolicyV3DtoBeta -Json $passwordPolicyV3DtoBeta
            -BetapasswordPolicyV3DtoBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetapasswordPolicyV3DtoBeta $passwordPolicyV3DtoBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of password policy to delete. (default to undefined)
        
        # Delete Password Policy by ID
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of password policy to retrieve. (default to undefined)
        
        # Get Password Policy by ID
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /password-policies
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        
        # List Password Policies
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -Betalimit $limit -Betaoffset $offset -Betacount $count  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /password-policies/{id}
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The ID of password policy to update. (default to undefined)
        $passwordPolicyV3DtoBeta = @"
        {description=Password Policy after update., id=2c91808e7d976f3b017d9f5ceae440c8, name=Improved Password Policy, dateCreated=1639056206564, lastUpdated=1662385430753, firstExpirationReminder=90, accountIdMinWordLength=3, accountNameMinWordLength=3, maxLength=0, maxRepeatedChars=4, minAlpha=1, minCharacterTypes=-1, minLength=8, minLower=0, minNumeric=1, minSpecial=0, minUpper=0, passwordExpiration=90, defaultPolicy=false, enablePasswdExpiration=false, requireStrongAuthn=false, requireStrongAuthOffNetwork=false, requireStrongAuthUntrustedGeographies=false, useAccountAttributes=false, useDictionary=false, useIdentityAttributes=false, validateAgainstAccountId=true, validateAgainstAccountName=true, sourceIds=[2c91808382ffee0b01830de154f14034, 2c91808582ffee0c01830de36511405f]}
        "@
        
        # Update Password Policy by ID
        
        try {
            $Result = ConvertFrom-JsonTopasswordPolicyV3DtoBeta -Json $passwordPolicyV3DtoBeta
            -Betaid $id -BetapasswordPolicyV3DtoBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetapasswordPolicyV3DtoBeta $passwordPolicyV3DtoBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
