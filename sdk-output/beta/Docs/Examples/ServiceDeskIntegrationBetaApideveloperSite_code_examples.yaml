- path: /service-desk-integrations
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $serviceDeskIntegrationDtoBeta = @"
        
        "@
        
        # Create new Service Desk integration
        
        try {
            $Result = ConvertFrom-JsonToserviceDeskIntegrationDtoBeta -Json $serviceDeskIntegrationDtoBeta
            -BetaserviceDeskIntegrationDtoBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetaserviceDeskIntegrationDtoBeta $serviceDeskIntegrationDtoBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of Service Desk integration to delete (default to undefined)
        
        # Delete a Service Desk integration
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Service Desk integration to get (default to undefined)
        
        # Get a Service Desk integration
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name** (optional) (default to undefined)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq*  **type**: *eq, in*  **cluster**: *eq, in* (optional) (default to undefined)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        
        # List existing Service Desk integrations
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -Betaoffset $offset -Betalimit $limit -Betasorters $sorters -Betafilters $filters -Betacount $count  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/templates/{scriptName}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $scriptName =  # string | The scriptName value of the Service Desk integration template to get (default to undefined)
        
        # Service Desk integration template by scriptName
        
        try {
            -BetascriptName $scriptName 
            
            # Below is a request that includes all optional parameters
            #  -BetascriptName $scriptName  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/types
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # List Service Desk integration types
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/status-check-configuration
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # Get the time check configuration
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Service Desk integration to update (default to undefined)
        $patchServiceDeskIntegrationRequestBeta = @"
        
        "@
        
        # Patch a Service Desk Integration
        
        try {
            $Result = ConvertFrom-JsonTopatchServiceDeskIntegrationRequestBeta -Json $patchServiceDeskIntegrationRequestBeta
            -Betaid $id -BetapatchServiceDeskIntegrationRequestBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetapatchServiceDeskIntegrationRequestBeta $patchServiceDeskIntegrationRequestBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/{id}
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Service Desk integration to update (default to undefined)
        $serviceDeskIntegrationDtoBeta = @"
        
        "@
        
        # Update a Service Desk integration
        
        try {
            $Result = ConvertFrom-JsonToserviceDeskIntegrationDtoBeta -Json $serviceDeskIntegrationDtoBeta
            -Betaid $id -BetaserviceDeskIntegrationDtoBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetaserviceDeskIntegrationDtoBeta $serviceDeskIntegrationDtoBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /service-desk-integrations/status-check-configuration
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $queuedCheckConfigDetailsBeta = @"
        
        "@
        
        # Update the time check configuration
        
        try {
            $Result = ConvertFrom-JsonToqueuedCheckConfigDetailsBeta -Json $queuedCheckConfigDetailsBeta
            -BetaqueuedCheckConfigDetailsBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetaqueuedCheckConfigDetailsBeta $queuedCheckConfigDetailsBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
