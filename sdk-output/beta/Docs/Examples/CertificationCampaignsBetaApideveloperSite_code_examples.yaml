- path: /campaigns/{id}/complete
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | Campaign ID. (default to undefined)
        $completeCampaignOptionsBeta = @"
        
        "@
        
        # Complete a Campaign
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetacompleteCampaignOptionsBeta $completeCampaignOptionsBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $campaignBeta = @"
        
        "@
        
        # Create Campaign
        
        try {
            $Result = ConvertFrom-JsonTocampaignBeta -Json $campaignBeta
            -BetacampaignBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetacampaignBeta $campaignBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $campaignTemplateBeta = @"
        
        "@
        
        # Create a Campaign Template
        
        try {
            $Result = ConvertFrom-JsonTocampaignTemplateBeta -Json $campaignTemplateBeta
            -BetacampaignTemplateBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetacampaignTemplateBeta $campaignTemplateBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template being deleted. (default to undefined)
        
        # Delete a Campaign Template
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template whose schedule is being deleted. (default to undefined)
        
        # Delete Campaign Template Schedule
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/delete
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $deleteCampaignsRequestBeta = @"
        
        "@
        
        # Delete Campaigns
        
        try {
            $Result = ConvertFrom-JsonTodeleteCampaignsRequestBeta -Json $deleteCampaignsRequestBeta
            -BetadeleteCampaignsRequestBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetadeleteCampaignsRequestBeta $deleteCampaignsRequestBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $detail =  # 'SLIM' | 'FULL' | Determines whether slim, or increased level of detail is provided for each campaign in the returned list. Slim is the default behavior. (optional) (default to undefined)
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **status**: *eq, in* (optional) (default to undefined)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created** (optional) (default to undefined)
        
        # List Campaigns
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -Betadetail $detail -Betalimit $limit -Betaoffset $offset -Betacount $count -Betafilters $filters -Betasorters $sorters  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign to be retrieved. (default to undefined)
        
        # Get Campaign
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/reports
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign whose reports are being fetched. (default to undefined)
        
        # Get Campaign Reports
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/reports-configuration
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        
        # Get Campaign Reports Configuration
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #   
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | Requested campaign template\'s ID. (default to undefined)
        
        # Get a Campaign Template
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template whose schedule is being fetched. (default to undefined)
        
        # Get Campaign Template Schedule
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) (default to undefined)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **name**: *eq, ge, gt, in, le, lt, ne, sw*  **id**: *eq, ge, gt, in, le, lt, ne, sw* (optional) (default to undefined)
        
        # List Campaign Templates
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -Betalimit $limit -Betaoffset $offset -Betacount $count -Betasorters $sorters -Betafilters $filters  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/reassign
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | The certification campaign ID (default to undefined)
        $adminReviewReassignBeta = @"
        
        "@
        
        # Reassign Certifications
        
        try {
            $Result = ConvertFrom-JsonToadminReviewReassignBeta -Json $adminReviewReassignBeta
            -Betaid $id -BetaadminReviewReassignBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetaadminReviewReassignBeta $adminReviewReassignBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template being modified. (default to undefined)
        # Array<JsonPatchOperationBeta> | A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.  The following fields are patchable: * name * description * deadlineDuration * campaign (all fields that are allowed during create) 
        $jsonPatchOperationBeta = @"[{op=replace, path=/description, value=Updated description!}, {op=replace, path=/campaign/filter/id, value=ff80818155fe8c080155fe8d925b0316}]"@ 
        
        
        # Update a Campaign Template
        
        try {
            $Result = ConvertFrom-JsonTojsonPatchOperationBeta -Json $jsonPatchOperationBeta
            -Betaid $id -BetajsonPatchOperationBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetajsonPatchOperationBeta $jsonPatchOperationBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/reports-configuration
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $campaignReportsConfigBeta = @"
        
        "@
        
        # Set Campaign Reports Configuration
        
        try {
            $Result = ConvertFrom-JsonTocampaignReportsConfigBeta -Json $campaignReportsConfigBeta
            -BetacampaignReportsConfigBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetacampaignReportsConfigBeta $campaignReportsConfigBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/schedule
  method: PUT
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template being scheduled. (default to undefined)
        $scheduleBeta = @"
        {type=MONTHLY, hours={type=LIST, values=[17]}, days={type=LIST, values=[15]}}
        "@
        
        # Set Campaign Template Schedule
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetascheduleBeta $scheduleBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/activate
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | Campaign ID. (default to undefined)
        $activateCampaignOptionsBeta = @"
        
        "@
        
        # Activate a Campaign
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetaactivateCampaignOptionsBeta $activateCampaignOptionsBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/run-remediation-scan
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign the remediation scan is being run for. (default to undefined)
        
        # Run Campaign Remediation Scan
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}/run-report/{type}
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign the report is being run for. (default to undefined)
        $type =  # ReportTypeBeta | Type of report to run. (default to undefined)
        
        # Run Campaign Report
        
        try {
            -Betaid $id -Betatype $type 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -Betatype $type  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaign-templates/{id}/generate
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template to use for generation. (default to undefined)
        
        # Generate a Campaign from Template
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /campaigns/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the campaign template being modified. (default to undefined)
        $requestBody =  # Array<object> | A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The fields that can be patched differ based on the status of the campaign.  When the campaign is in the *STAGED* status, you can patch these fields: * name * description * recommendationsEnabled * deadline * emailNotificationEnabled * autoRevokeAllowed  When the campaign is in the *ACTIVE* status, you can patch these fields: * deadline 
        $requestBody = @"[{op=replace, path=/name, value=This field has been updated!}, {op=copy, from=/name, path=/description}]"@ 
        
        
        # Update a Campaign
        
        try {
            $Result = ConvertFrom-JsonTorequestBody -Json $requestBody
            -Betaid $id -BetarequestBody $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetarequestBody $requestBody  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
