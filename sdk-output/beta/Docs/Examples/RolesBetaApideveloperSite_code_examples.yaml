- path: /roles
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $roleBeta = @"
        
        "@
        
        # Create a Role
        
        try {
            $Result = ConvertFrom-JsonToroleBeta -Json $roleBeta
            -BetaroleBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetaroleBeta $roleBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/bulk-delete
  method: POST
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $roleBulkDeleteRequestBeta = @"
        {roleIds=[2c91808876438bb2017668b91919ecca, 2c91808876438ba801766e129f151816]}
        "@
        
        # Delete Role(s)
        
        try {
            $Result = ConvertFrom-JsonToroleBulkDeleteRequestBeta -Json $roleBulkDeleteRequestBeta
            -BetaroleBulkDeleteRequestBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -BetaroleBulkDeleteRequestBeta $roleBulkDeleteRequestBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: DELETE
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Role (default to undefined)
        
        # Delete a Role
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Role (default to undefined)
        
        # Get a Role
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}/assigned-identities
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Role for which the assigned Identities are to be listed (default to undefined)
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **aliasName**: *eq, sw*  **email**: *eq, sw*  **name**: *eq, sw, co* (optional) (default to undefined)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **id, name, aliasName, email** (optional) (default to undefined)
        
        # Identities assigned a Role
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -Betalimit $limit -Betaoffset $offset -Betacount $count -Betafilters $filters -Betasorters $sorters  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}/entitlements
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the containing role (default to undefined)
        $limit =  # number | Max number of results to return. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 250)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **attribute**: *eq, sw*  **value**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **source.id**: *eq, in* (optional) (default to undefined)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, attribute, value, created, modified** (optional) (default to undefined)
        
        # List role\'s Entitlements
        
        try {
            -Betaid $id 
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -Betalimit $limit -Betaoffset $offset -Betacount $count -Betafilters $filters -Betasorters $sorters  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles
  method: GET
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $forSubadmin =  # string | If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity\'s ID. A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin. (optional) (default to undefined)
        $limit =  # number | Note that for this API the maximum value for limit is 50. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 50)
        $offset =  # number | Offset into the full result set. Usually specified with *limit* to paginate through the results. See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to 0)
        $count =  # boolean | If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.  Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.  See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information. (optional) (default to false)
        $filters =  # string | Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)  Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq* (optional) (default to undefined)
        $sorters =  # string | Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)  Sorting is supported for the following fields: **name, created, modified** (optional) (default to undefined)
        $forSegmentIds =  # string | If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.  If segmentation is currently unavailable, specifying this parameter results in an error. (optional) (default to undefined)
        $includeUnsegmented =  # boolean | Whether or not the response list should contain unsegmented Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented* as false results in an error. (optional) (default to true)
        
        # List Roles
        
        try {
            
            
            # Below is a request that includes all optional parameters
            #  -BetaforSubadmin $forSubadmin -Betalimit $limit -Betaoffset $offset -Betacount $count -Betafilters $filters -Betasorters $sorters -BetaforSegmentIds $forSegmentIds -BetaincludeUnsegmented $includeUnsegmented  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
- path: /roles/{id}
  method: PATCH
  xCodeSample:
    - lang: TypeScript
      label: SDK
      source: |
        $id =  # string | ID of the Role to patch (default to undefined)
        # Array<JsonPatchOperationBeta> | 
        $jsonPatchOperationBeta = @"[{op=replace, path=/requestable, value=true}, {op=replace, path=/enabled, value=true}]"@ 
        
        
        # Patch a specified Role
        
        try {
            $Result = ConvertFrom-JsonTojsonPatchOperationBeta -Json $jsonPatchOperationBeta
            -Betaid $id -BetajsonPatchOperationBeta $Result
            
            # Below is a request that includes all optional parameters
            #  -Betaid $id -BetajsonPatchOperationBeta $jsonPatchOperationBeta  
        } catch {
            Write-Host $_.Exception.Response.StatusCode.value__ "Exception occurred when calling "
            Write-Host $_.ErrorDetails
        }
